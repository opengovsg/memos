name: ci
on:
  push:
  pull_request:
    types: [opened, reopened]

env:
  PRODUCTION_BRANCH: refs/heads/production
  STAGING_BRANCH: refs/heads/staging

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'

      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-

      - name: Lint lockfiles
        run: |
          npx lockfile-lint --type npm --path frontend/package-lock.json --validate-https --allowed-hosts npm
          npx lockfile-lint --type npm --path backend/package-lock.json --validate-https --allowed-hosts npm

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint

      - name: Build
        run: npm run build

  gatekeep:
    name: Determine if Build & Deploy is needed
    outputs:
      proceed: ${{ steps.determine_proceed.outputs.proceed }}
    runs-on: ubuntu-18.04
    if: github.event_name == 'push'
    steps:
      - id: determine_proceed
        run: |
          if [[ -z "${AWS_ACCESS_KEY_ID}" || -z "${AWS_SECRET_ACCESS_KEY}"  ]]; then
            echo '::set-output name=proceed::false';
          elif [[ $GITHUB_REF == $STAGING_BRANCH ]]; then
            echo '::set-output name=proceed::true';
          elif [[ $GITHUB_REF == $PRODUCTION_BRANCH ]]; then
            echo '::set-output name=proceed::true';
          else
            echo '::set-output name=proceed::false';
          fi
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
